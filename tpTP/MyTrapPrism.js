/**
 * MyTrapPrism
 * @param gl {WebGLRenderingContext}
 * @constructor
 */

class MyTrapPrism extends CGFobject
{
	constructor(scene, left = 1, right = 1) 
	{
        
        super(scene);
        
        this.l = left;
        this.r = right;
        
        this.initBuffers();
        
	};

	initBuffers() 
	{
		this.vertices = [

            // Front face

            -0.5, -0.5, 0.5,   // 0
            0.5, -0.5, 0.5,    // 1
            0.5, 0.5, 0.5,     // 2
            -0.5, 0.5, 0.5,    // 3

            // Back face

            0.5, -0.5, -0.5,    // 4
            -0.5, -0.5, -0.5,   // 5
            0.5, 0.5, -0.5,     // 6
            -0.5, 0.5, -0.5,     // 7

            // right solid

            0.5+this.r, -0.5, 0.5,    // 8
            0.5+this.r, -0.5, -0.5,   // 9

            // left solid

            -0.5-this.l, -0.5, 0.5,    // 10
            -0.5-this.l, -0.5, -0.5,   // 11


            // repeated for normals

            // Front face

            -0.5, -0.5, 0.5,   // 0
            0.5, -0.5, 0.5,    // 1
            0.5, 0.5, 0.5,     // 2
            -0.5, 0.5, 0.5,    // 3

            // Back face

            0.5, -0.5, -0.5,    // 4
            -0.5, -0.5, -0.5,   // 5
            0.5, 0.5, -0.5,     // 6
            -0.5, 0.5, -0.5,     // 7

            // right solid

            0.5+this.r, -0.5, 0.5,    // 8
            0.5+this.r, -0.5, -0.5,   // 9

            // left solid

            -0.5-this.l, -0.5, 0.5,    // 10
            -0.5-this.l, -0.5, -0.5,   // 11

            // repeated for normals

            // Front face

            -0.5, -0.5, 0.5,   // 0
            0.5, -0.5, 0.5,    // 1
            0.5, 0.5, 0.5,     // 2
            -0.5, 0.5, 0.5,    // 3

            // Back face

            0.5, -0.5, -0.5,    // 4
            -0.5, -0.5, -0.5,   // 5
            0.5, 0.5, -0.5,     // 6
            -0.5, 0.5, -0.5,     // 7

            // right solid

            0.5+this.r, -0.5, 0.5,    // 8
            0.5+this.r, -0.5, -0.5,   // 9

            // left solid

            -0.5-this.l, -0.5, 0.5,    // 10
            -0.5-this.l, -0.5, -0.5,   // 11
				];
		this.indices = [
            // Front face
            0, 1, 2, 
            2, 3, 0,
            
            // Back face
            5, 7, 6,
            6, 4, 5,

            // Top face
            3, 2, 6,
            6, 7, 3,

            // Bottom face
            10, 11, 9,
            9, 8, 10,

            // Left solid
            10, 0, 3,
            7, 5, 11,
            11, 10, 3,
            3, 7, 11,

            // right solid
            8, 2, 1,
            6, 9, 4,
            9, 6, 8,
            8, 6, 2,
        ];

        this.normals=[
            0, 0, 1,
            0, 0, 1,
            0, 0, 1,
            0, 0, 1,
            0, 0, -1,
            0, 0, -1,
            0, 0, -1,
            0, 0, -1,
            1, 1, 0, 
            1, 1, 0, 
            -1, -1, 0, 
            -1, -1, 0, 

            // other normals
            0, -1, 0, // 0
            0, -1, 0, // 1
            0, 1, 0,  // 2
            0, 1, 0,  // 3
            0, -1, 0, // 4
            0, -1, 0, // 5
            0, 1, 0,  // 6
            0, 1, 0,  // 7
            0, -1, 0, // 8
            0, -1, 0, // 9
            0, -1, 0, // 10
            0, -1, 0, // 11
            

        ];

        this.texCoords=[
            1/3, 1/2, // 0
            2/3, 1/2, // 1
            2/3, 3/4, // 2
            1/3, 3/4, // 3
            2/3, 1/4, // 4
            1/3, 1/4, // 5
            1/1, 1/4, // 6
            0/1, 1/4, // 7
            7/9, 1/2, // 8
            7/9, 1/4, // 9
            2/9, 1/2, // 10
            2/9, 1/4, // 11

            1/3, 1/2, // 0 c
            2/3, 1/2, // 1 c
            1/1, 1/2, // 2 c
            0/1, 1/2, // 3 c
            2/3, 1/4, // 4 c
            1/3, 1/4, // 5 c
            2/3, 1/1, // 6 
            1/3, 1/1, // 7 
            7/9, 1/2, // 8 c
            7/9, 1/4, // 9 c
            2/9, 1/2, // 10 c
            2/9, 1/4, // 11 c

            1/3, 1/2, // 0 c
            2/3, 1/2, // 1 c
            1/1, 1/2, // 2 c
            0/1, 1/2, // 3 c
            2/3, 1/4, // 4 c
            1/3, 1/4, // 5 c
            2/3, 0/1, // 6 
            1/3, 0/1, // 7 
            7/9, 1/2, // 8 c
            7/9, 1/4, // 9 c
            2/9, 1/2, // 10 c
            2/9, 1/4, // 11 c

        ];

		this.primitiveType=this.scene.gl.TRIANGLES;
		this.initGLBuffers();
	};
};
